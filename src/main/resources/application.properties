spring.h2.console.enabled=true
logging.level.org.hibernate.SQL=debug
logging.level.ru.another=trace
# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring.datasource.url=jdbc:postgresql://localhost:5432/web-helper-db
spring.datasource.username=another
spring.datasource.password=a69yu59i33
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=validate
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.max_fetch_depth=2
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_structured_entries=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
# FLYWAY (FlywayProperties)
flyway.baseline-description=Init Database Migration
# version to start migration
flyway.baseline-version=0.0.1
flyway.baseline-on-migrate=true
# Check that migration scripts location exists.
flyway.check-location=false
# Enable flyway.
flyway.enabled=true
# locations of migrations scripts
flyway.locations=classpath:db/migration
flyway.sql-migration-prefix=V
flyway.sql-migration-suffix=.sql
flyway.validate-on-migrate=false
#flyway.clean-on-validation-error= #
#flyway.encoding=
#flyway.ignore-failed-future-migration= #
#flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.
#flyway.out-of-order= #
#flyway.password= # JDBC password if you want Flyway to create its own DataSource
#flyway.placeholder-prefix= #
#flyway.placeholder-replacement= #
#flyway.placeholder-suffix= #
#flyway.placeholders.*= #
#flyway.schemas= # schemas to update
#flyway.sql-migration-separator= #
#flyway.table= #
#flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.
#flyway.user= # Login user of the database to migrate.